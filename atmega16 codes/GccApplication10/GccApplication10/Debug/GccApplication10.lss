
GccApplication10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  0000012c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000880  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000329  00000000  00000000  00000900  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000099  00000000  00000000  00000c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000291  00000000  00000000  00000cc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000f54  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000b8  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000024  00000000  00000000  00001030  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

int main(void)
{

   
    DDRB|=(1<<PB3);
  92:	bb 9a       	sbi	0x17, 3	; 23
		ADMUX|=(1<<REFS0)|(1<<ADLAR)|(1<<MUX0)|(1<<MUX2);
  94:	87 b1       	in	r24, 0x07	; 7
  96:	85 66       	ori	r24, 0x65	; 101
  98:	87 b9       	out	0x07, r24	; 7
		ADCSRA|=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  9a:	86 b1       	in	r24, 0x06	; 6
  9c:	87 68       	ori	r24, 0x87	; 135
  9e:	86 b9       	out	0x06, r24	; 6
       
	   TCCR0|=(1<<WGM00)|(1<<COM01)|(1<<WGM01)|(1<<CS02)|(1<<CS00);
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	8d 66       	ori	r24, 0x6D	; 109
  a4:	83 bf       	out	0x33, r24	; 51
		int adc=0;
		while(1)
		{ 
			ADCSRA|=(1<<ADSC);
  a6:	36 9a       	sbi	0x06, 6	; 6
			while(ADCSRA &(1<<ADSC));
  a8:	36 99       	sbic	0x06, 6	; 6
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <main+0x16>
			adc=(ADCL>>6)|(ADCH<<2);
  ac:	24 b1       	in	r18, 0x04	; 4
  ae:	85 b1       	in	r24, 0x05	; 5
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	22 95       	swap	r18
  bc:	26 95       	lsr	r18
  be:	26 95       	lsr	r18
  c0:	23 70       	andi	r18, 0x03	; 3
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	82 2b       	or	r24, r18
  c6:	93 2b       	or	r25, r19
			OCR0=adc/4;
  c8:	95 95       	asr	r25
  ca:	87 95       	ror	r24
  cc:	95 95       	asr	r25
  ce:	87 95       	ror	r24
  d0:	8c bf       	out	0x3c, r24	; 60
		
		
  d2:	e9 cf       	rjmp	.-46     	; 0xa6 <main+0x14>

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
